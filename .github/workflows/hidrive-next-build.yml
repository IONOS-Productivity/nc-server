name: HiDrive Next Build

# SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors
# SPDX-FileCopyrightText: 2024 STRATO AG
# SPDX-License-Identifier: AGPL-3.0-or-later

# The HiDrive Next source is packaged as a container image.
# This is a workaround because releases can not be created without tags
# and we want to be able to create snapshots from branches.

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'custom-npms/**'
      - 'apps/**'
      - 'apps/**/appinfo/info.xml'
      - 'apps-custom/**'
      - 'apps-external/**'
      - 'IONOS'
      - 'package.json'
      - 'package-lock.json'
      - 'themes/**'
      - 'lib/**'
      - 'tsconfig.json'
      - '**.js'
      - '**.ts'
      - '**.vue'
      - '.gitmodules'
  push:
    branches:
      - ionos-dev
      - ionos-stable

# Ensure only one instance of this workflow runs at a time per branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TARGET_PACKAGE_NAME: hidrive-next.zip
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ARTIFACTORY_REPOSITORY_SNAPSHOT: ionos-productivity-hdnext-snapshot
  # Global environment variables to avoid repeating in each step
  CYPRESS_INSTALL_BINARY: 0
  PUPPETEER_SKIP_DOWNLOAD: true
  NODE_OPTIONS: "--max-old-space-size=4096"

permissions:
  contents: read

jobs:
  # Build custom NPM packages first - required by Nextcloud core and apps
  build-custom-npms:
    runs-on: ubuntu-latest
    name: Build custom NPM packages

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node with version from package.json's engines
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"
          cache: 'npm'

      - name: Cache custom-npms node_modules
        uses: actions/cache@v4
        with:
          path: custom-npms/*/node_modules
          key: ${{ runner.os }}-custom-npms-${{ hashFiles('custom-npms/*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-custom-npms-

      - name: Build custom MDI SVG
        run: |
          cd custom-npms/nc-mdi-svg
          FONTAWESOME_PACKAGE_TOKEN=${{ secrets.FONTAWESOME_PACKAGE_TOKEN }} npm ci
          npm run build

      - name: Build custom MDI JS
        run: |
          cd custom-npms/nc-mdi-js
          npm ci
          npm run build

      - name: Build custom Vue icons package
        run: |
          cd custom-npms/nc-vue-material-design-icons
          npm ci
          npm run build

      - name: Build custom Nextcloud Vue
        run: |
          cd custom-npms/nc-nextcloud-vue
          npm ci
          npm run build

      - name: Cache built custom-npms for other jobs
        uses: actions/cache/save@v4
        with:
          path: custom-npms/
          key: ${{ runner.os }}-built-custom-npms-${{ github.sha }}

  # Build Nextcloud core after custom-npms are ready
  build-nextcloud-core:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build Nextcloud core

    outputs:
      NC_VERSION: ${{ steps.get_nc_version.outputs.NC_VERSION }}

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node with version from package.json's engines
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"
          cache: 'npm'

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231 #v2.31.1
        with:
          tools: composer:v2
          extensions: gd, zip, curl, xml, xmlrpc, mbstring, sqlite, xdebug, pgsql, intl, imagick, gmp, apcu, bcmath, redis, soap, imap, opcache
        env:
          runner: ubuntu-latest

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Restore built custom-npms
        uses: actions/cache/restore@v4
        with:
          path: custom-npms/
          key: ${{ runner.os }}-built-custom-npms-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Build Nextcloud core (without custom-npms - already built)
        run: |
          composer install --no-dev -o
          npm ci
          NODE_OPTIONS="--max-old-space-size=4096" npm run build

      - name: Get NC version and create version.json
        id: get_nc_version
        continue-on-error: false
        run: |
          NC_VERSION=$(php -r 'include("version.php");echo implode(".", $OC_Version);')
          echo "NC_VERSION: $NC_VERSION"

          if [ -z "$NC_VERSION" ]; then
            echo "NC_VERSION is empty"
            exit 1
          fi

          echo "NC_VERSION=$NC_VERSION" >> $GITHUB_OUTPUT
          
          # Create version.json in one go
          buildDate=$(date +%s)
          buildRef=$(git rev-parse --short HEAD)
          jq -n --arg buildDate "$buildDate" --arg buildRef "$buildRef" --arg ncVersion "$NC_VERSION" \
            '{buildDate: $buildDate, buildRef: $buildRef, ncVersion: $ncVersion}' > version.json
          echo "version.json created:"
          jq . version.json

      - name: Cache built Nextcloud core
        uses: actions/cache/save@v4
        with:
          path: |
            dist/
            core/
            lib/
            resources/
            version.json
            composer.lock
          key: ${{ runner.os }}-nextcloud-core-${{ github.sha }}

  # Dedicated job for each app
  build-simplesettings-app:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build simplesettings app

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"

      - name: Cache app node_modules
        uses: actions/cache@v4
        with:
          path: apps-custom/simplesettings/node_modules
          key: ${{ runner.os }}-simplesettings-${{ hashFiles('apps-custom/simplesettings/package-lock.json') }}

      - name: Build simplesettings app
        run: make -f IONOS/Makefile build_dep_simplesettings_app

      - name: Cache built app
        uses: actions/cache/save@v4
        with:
          path: apps-custom/simplesettings/
          key: ${{ runner.os }}-built-simplesettings-${{ github.sha }}

  build-viewer-app:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build viewer app

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"

      - name: Setup PHP
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231 #v2.31.1
        with:
          tools: composer:v2

      - name: Cache app dependencies
        uses: actions/cache@v4
        with:
          path: |
            apps-external/viewer/node_modules
            ~/.composer/cache
          key: ${{ runner.os }}-viewer-${{ hashFiles('apps-external/viewer/package-lock.json', 'apps-external/viewer/composer.lock') }}

      - name: Build viewer app
        run: make -f IONOS/Makefile build_dep_viewer_app

      - name: Cache built app
        uses: actions/cache/save@v4
        with:
          path: apps-external/viewer/
          key: ${{ runner.os }}-built-viewer-${{ github.sha }}

  build-richdocuments-app:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build richdocuments app

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"

      - name: Setup PHP
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231 #v2.31.1
        with:
          tools: composer:v2

      - name: Cache app dependencies
        uses: actions/cache@v4
        with:
          path: |
            apps-external/richdocuments/node_modules
            ~/.composer/cache
          key: ${{ runner.os }}-richdocuments-${{ hashFiles('apps-external/richdocuments/package-lock.json', 'apps-external/richdocuments/composer.lock') }}

      - name: Build richdocuments app
        run: make -f IONOS/Makefile build_richdocuments_app

      - name: Cache built app
        uses: actions/cache/save@v4
        with:
          path: apps-external/richdocuments/
          key: ${{ runner.os }}-built-richdocuments-${{ github.sha }}

  build-user-oidc-app:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build user_oidc app

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"

      - name: Setup PHP
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231 #v2.31.1
        with:
          tools: composer:v2

      - name: Cache app dependencies
        uses: actions/cache@v4
        with:
          path: |
            apps-external/user_oidc/node_modules
            ~/.composer/cache
          key: ${{ runner.os }}-user-oidc-${{ hashFiles('apps-external/user_oidc/package-lock.json', 'apps-external/user_oidc/composer.lock') }}

      - name: Build user_oidc app
        run: make -f IONOS/Makefile build_dep_user_oidc_app

      - name: Cache built app
        uses: actions/cache/save@v4
        with:
          path: apps-external/user_oidc/
          key: ${{ runner.os }}-built-user-oidc-${{ github.sha }}

  build-nc-ionos-processes-app:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build nc_ionos_processes app

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Setup PHP
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231 #v2.31.1
        with:
          tools: composer:v2

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('apps-custom/nc_ionos_processes/composer.lock') }}

      - name: Build nc_ionos_processes app
        run: make -f IONOS/Makefile build_dep_nc_ionos_processes_app

      - name: Cache built app
        uses: actions/cache/save@v4
        with:
          path: apps-custom/nc_ionos_processes/
          key: ${{ runner.os }}-built-nc-ionos-processes-${{ github.sha }}

  build-theming-app:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build theming app

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Build theming app
        run: make -f IONOS/Makefile build_dep_theming_app

      - name: Cache built app
        uses: actions/cache/save@v4
        with:
          path: apps-custom/nc_theming/
          key: ${{ runner.os }}-built-theming-${{ github.sha }}

  build-ionos-theme:
    runs-on: ubuntu-latest
    needs: build-custom-npms
    name: Build IONOS theme

    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Set up node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: "package.json"

      - name: Cache theme node_modules
        uses: actions/cache@v4
        with:
          path: themes/nc-ionos-theme/IONOS/node_modules
          key: ${{ runner.os }}-ionos-theme-${{ hashFiles('themes/nc-ionos-theme/IONOS/package-lock.json') }}

      - name: Build IONOS theme
        run: make -f IONOS/Makefile build_dep_ionos_theme

      - name: Cache built theme
        uses: actions/cache/save@v4
        with:
          path: themes/nc-ionos-theme/
          key: ${{ runner.os }}-built-ionos-theme-${{ github.sha }}

  # Final assembly job that combines everything
  hidrive-next-build:
    runs-on: ubuntu-latest
    needs:
      - build-nextcloud-core
      - build-simplesettings-app
      - build-viewer-app
      - build-richdocuments-app
      - build-user-oidc-app
      - build-nc-ionos-processes-app
      - build-theming-app
      - build-ionos-theme

    permissions:
      contents: read

    outputs:
      NC_VERSION: ${{ needs.build-nextcloud-core.outputs.NC_VERSION }}

    name: Package HiDrive Next
    steps:
      - name: Checkout server
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 #v4.1.7
        with:
          submodules: true

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y make zip unzip

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@c541c155eee45413f5b09a52248675b1a2575231 #v2.31.1
        with:
          tools: composer:v2
          extensions: gd, zip, curl, xml, xmlrpc, mbstring, sqlite, xdebug, pgsql, intl, imagick, gmp, apcu, bcmath, redis, soap, imap, opcache
        env:
          runner: ubuntu-latest

      - name: Restore built Nextcloud core
        uses: actions/cache/restore@v4
        with:
          path: |
            dist/
            core/
            lib/
            resources/
            version.json
            composer.lock
          key: ${{ runner.os }}-nextcloud-core-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore built custom-npms
        uses: actions/cache/restore@v4
        with:
          path: custom-npms/
          key: ${{ runner.os }}-built-custom-npms-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore all built apps and themes
        run: |
          echo "Restoring all built apps and themes..."

      - name: Restore simplesettings app
        uses: actions/cache/restore@v4
        with:
          path: apps-custom/simplesettings/
          key: ${{ runner.os }}-built-simplesettings-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore viewer app
        uses: actions/cache/restore@v4
        with:
          path: apps-external/viewer/
          key: ${{ runner.os }}-built-viewer-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore richdocuments app
        uses: actions/cache/restore@v4
        with:
          path: apps-external/richdocuments/
          key: ${{ runner.os }}-built-richdocuments-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore user_oidc app
        uses: actions/cache/restore@v4
        with:
          path: apps-external/user_oidc/
          key: ${{ runner.os }}-built-user-oidc-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore nc_ionos_processes app
        uses: actions/cache/restore@v4
        with:
          path: apps-custom/nc_ionos_processes/
          key: ${{ runner.os }}-built-nc-ionos-processes-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore theming app
        uses: actions/cache/restore@v4
        with:
          path: apps-custom/nc_theming/
          key: ${{ runner.os }}-built-theming-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Restore IONOS theme
        uses: actions/cache/restore@v4
        with:
          path: themes/nc-ionos-theme/
          key: ${{ runner.os }}-built-ionos-theme-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Add config partials
        run: make -f IONOS/Makefile add_config_partials

      - name: Zip dependencies
        run: make -f IONOS/Makefile zip_dependencies TARGET_PACKAGE_NAME=${{ env.TARGET_PACKAGE_NAME }}

      - name: Upload artifact result for job hidrive-next-build
        uses: actions/upload-artifact@v4
        with:
          retention-days: 30
          name: hidrive_next_build_artifact
          path: ${{ env.TARGET_PACKAGE_NAME }}

      - name: Show changes on failure
        if: failure()
        run: |
          git status
          git --no-pager diff
          exit 1 # make it red to grab attention

  upload-to-artifactory:
    runs-on: ubuntu-latest
    # Upload the artifact to the Artifactory repository on PR *OR* on "ionos-dev|ionos-stable" branch push defined in the on:push:branches
    if: github.event_name == 'pull_request' || github.ref_name == 'ionos-dev' || github.ref_name == 'ionos-stable'

    name: Push to artifactory
    needs: hidrive-next-build

    outputs:
      ARTIFACTORY_LAST_BUILD_PATH: ${{ steps.artifactory_upload.outputs.ARTIFACTORY_LAST_BUILD_PATH }}

    env:
      BUILD_NAME: "hidrive_next-snapshot"

    steps:
      - name: Download artifact zip
        uses: actions/download-artifact@v4
        with:
          name: hidrive_next_build_artifact

      # This action sets up the JFrog CLI with the Artifactory URL and access token
      - uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JF_ARTIFACTORY_URL }}
          JF_USER: ${{ secrets.JF_ARTIFACTORY_USER }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Upload build to artifactory
        id: artifactory_upload
        run: |
          # PR builds are stored in a separate directory as "dev/pr/hidrive-next-pr-<number>.zip"
          # Push to "ionos-dev" branch is stored as "dev/hidrive-next-<ncVersion>.zip"

          ARTIFACTORY_STAGE_PREFIX="dev"

          # set ARTIFACTORY_STAGE_PREFIX=stable on ionos-stable branch
          if [ ${{ github.ref_name }} == "ionos-stable" ]; then
              ARTIFACTORY_STAGE_PREFIX="stable"
          fi

          export PATH_TO_DIRECTORY="${{ env.ARTIFACTORY_REPOSITORY_SNAPSHOT }}/${ARTIFACTORY_STAGE_PREFIX}"
          PATH_TO_FILE="pr/hidrive-next-pr-${{ github.event.pull_request.number }}.zip"

          if [ -z "${{ github.event.pull_request.number }}" ]; then
            PATH_TO_FILE="hidrive-next-${{ needs.hidrive-next-build.outputs.NC_VERSION }}.zip"
          fi

          export PATH_TO_LATEST_ARTIFACT="${PATH_TO_DIRECTORY}/${PATH_TO_FILE}"

          # Promote current build to the "latest" dev build
          jf rt upload "${{ env.TARGET_PACKAGE_NAME }}" \
          --build-name "${{ env.BUILD_NAME }}" \
          --build-number ${{ github.run_number }} \
          --target-props "hdnext.nc_version=${{ needs.hidrive-next-build.outputs.NC_VERSION }};vcs.branch=${{ github.ref }};vcs.revision=${{ github.sha }}" \
          $PATH_TO_LATEST_ARTIFACT

          echo "ARTIFACTORY_LAST_BUILD_PATH=${PATH_TO_LATEST_ARTIFACT}" >> $GITHUB_OUTPUT

      - name: Show changes on failure
        if: failure()
        run: |
          git status
          git --no-pager diff
          exit 1 # make it red to grab attention

  hidrive-next-artifact-to-ghcr_io:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    name: Push artifact to ghcr.io
    needs: hidrive-next-build

    steps:
      - name: Download artifact zip
        uses: actions/download-artifact@v4
        with:
          name: hidrive_next_build_artifact

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Dockerfile
        run: |
          cat >Dockerfile << 'EOF'
          FROM busybox as builder
          COPY ./${{ env.TARGET_PACKAGE_NAME }} /
          WORKDIR /builder
          RUN unzip /${{ env.TARGET_PACKAGE_NAME }} -d /builder

          FROM scratch
          WORKDIR /app
          VOLUME /app
          COPY --from=builder /builder /app
          EOF

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Show changes on failure
        if: failure()
        run: |
          exit 1 # make it red to grab attention


  trigger-remote-dev-workflow:
    runs-on: self-hosted

    name: Trigger remote workflow
    needs: [ hidrive-next-build, upload-to-artifactory ]
    # Trigger remote build on "ionos-dev|ionos-stable" branch *push* defined in the on:push:branches
    if: github.event_name == 'push' && ( github.ref_name == 'ionos-dev' || github.ref_name == 'ionos-stable' )
    steps:
      - name: Trigger remote workflow
        run: |
          # The 'ionos-dev' branch will trigger remote "dev" branch workflow
          GITLAB_BRANCH="dev"

          # set GITLAB_BRANCH=stable on ionos-stable branch
          if [ ${{ github.ref_name }} == "ionos-stable" ]; then
              GITLAB_BRANCH="stable"
          fi

          echo "Triggering remote workflow on branch: ${GITLAB_BRANCH}"

          # Call webhook
          curl \
          --silent \
          --fail-with-body \
          -o response.json \
          --form token=${{ secrets.GITLAB_TOKEN }} \
          --form ref="${GITLAB_BRANCH}" \
          --form "variables[GITHUB_SHA]=${{ github.sha }}" \
          --form "variables[ARTIFACTORY_LAST_BUILD_PATH]=${{ needs.upload-to-artifactory.outputs.ARTIFACTORY_LAST_BUILD_PATH }}" \
          --form "variables[NC_VERSION]=${{ needs.hidrive-next-build.outputs.NC_VERSION }}" \
          --form "variables[BUILD_ID]=${{ github.run_id }}" \
          "${{ secrets.GITLAB_TRIGGER_URL }}" || { 
            RETCODE="$?"
            echo "Webhook call failed with code: $RETCODE"
            if [ -f response.json ]; then
              echo "Response:"
              jq . response.json
            fi
            exit "$RETCODE"
          }

          echo "Remote workflow triggered successfully"
          if [ -f response.json ]; then
            jq . response.json
          fi

      - name: Show changes on failure
        if: failure()
        run: |
          git status
          git --no-pager diff
          exit 1 # make it red to grab attention
